{"version":3,"sources":["component/molecules/GridItem/index.js","component/organisms/ProductGrid/index.js","component/molecules/CartItem/index.js","component/organisms/Cart/index.js","utils/axios.js","container/CatalogPage/index.js","component/organisms/Header/index.js","component/organisms/Footer/index.js","mainLayout.js","reportWebVitals.js","index.js"],"names":["GridItem","props","className","src","image","alt","width","name","description","price","quantity","parseInt","onClick","handleSelect","id","ProductGrid","productList","map","product","key","CartItem","removeOne","cartQuantity","index","addOne","Cart","cartItem","item","length","totalAmount","instance","axios","create","baseURL","headers","CatalogPage","setTotalProductCount","totalProductCount","useState","setProductList","setCartItem","setTotalAmount","useEffect","get","then","data","currentProductId","cartIndex","findIndex","val","tempCartItem","tempProduct","tempCart","forEach","push","currentProductQuantity","currentProductIndex","splice","Header","Footer","MainLayout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAGe,SAASA,EAASC,GAM7B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAgBC,IAAKF,EAAMG,MAAOC,IAAK,UAAWC,MAAO,MACxE,qBAAKJ,UAAU,eAAf,SAA+BD,EAAMM,OACrC,qBAAKL,UAAU,sBAAf,SAAsCD,EAAMO,cAC5C,sBAAKN,UAAU,eAAf,UAA8B,uCAA9B,IAA6CD,EAAMQ,SACnD,sBAAKP,UAAU,eAAf,UAA8B,yCAA9B,IAA+CD,EAAMS,YACpDC,SAASV,EAAMS,UAAU,EAAE,qBAAMR,UAAU,iBAAiBU,QAAS,kBAAMX,EAAMY,aAAaZ,EAAMa,KAAzE,yBAAiG,Q,MCZ1H,SAASC,EAAYd,GAMhC,OACI,qBAAKC,UAAU,eAAf,SACKD,EAAMe,YAAYC,KAAI,SAAAC,GAAO,OAC1B,wBAAC,EAAD,2BACQA,GADR,IAEIC,IAAKD,EAAQJ,GACbD,aAAcZ,EAAMY,qB,YCbzB,SAASO,EAASnB,GAM7B,OACI,sBAAKC,UAAU,yBAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,qBAAqBC,IAAKF,EAAMG,MAAOC,IAAK,eAAgBC,MAAO,KAClF,qBAAKJ,UAAU,oBAAf,SAAoCD,EAAMM,UAE9C,sBAAKL,UAAU,oBAAf,mBAAqCD,EAAMQ,SAC3C,sBAAKP,UAAU,oBAAf,UACI,sBAAMU,QAAS,kBAAMX,EAAMoB,UAAUpB,EAAMa,GAAIb,EAAMqB,aAAcrB,EAAMsB,QAAzE,eACCtB,EAAMqB,aACP,sBAAMV,QAAS,kBAAMX,EAAMuB,OAAOvB,EAAMa,KAAxC,kBAEJ,sBAAKZ,UAAU,oBAAf,mBAAqCS,SAASV,EAAMQ,OAAOE,SAASV,EAAMqB,oBCjBvE,SAASG,EAAKxB,GAMzB,OACI,sBAAKC,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,qBACA,qBAAKA,UAAU,cAAf,mBACA,qBAAKA,UAAU,cAAf,sBACA,qBAAKA,UAAU,cAAf,sBAEHD,EAAMyB,SAAST,KAAI,SAACU,EAAMJ,GAAP,OAChB,wBAAC,EAAD,2BACQI,GADR,IAEIJ,MAAOA,EACPJ,IAAKlB,EAAMa,GACXO,UAAWpB,EAAMoB,UACjBG,OAAQvB,EAAMuB,aAGrBvB,EAAMyB,SAASE,OAAO,EACnB,sBAAK1B,UAAU,cAAf,UACI,uBACA,sBAAKA,UAAU,cAAf,0BAAsCD,EAAM4B,kBAElD,Q,kBC9BRC,E,OAAWC,EAAMC,OAAO,CAC7BC,QAAS,2BACTC,QAAS,CACR,eAAgB,sBCCH,SAASC,EAAYlC,GAAQ,IAChCmC,EAA4CnC,EAA5CmC,qBAAsBC,EAAsBpC,EAAtBoC,kBADS,EAEDC,mBAAS,IAFR,mBAEhCtB,EAFgC,KAEnBuB,EAFmB,OAGPD,mBAAS,IAHF,mBAGhCZ,EAHgC,KAGtBc,EAHsB,OAIDF,mBAAS,GAJR,mBAIhCT,EAJgC,KAInBY,EAJmB,KAMvCC,qBAAU,WACNX,EAAMY,IAAI,wCACLC,MAAK,SAAAC,GACFN,EAAeM,EAAKA,KAAKA,WAElC,IA8IH,OACI,sBAAK3C,UAAU,OAAf,UACI,cAAC,EAAD,CACIc,YAAaA,EACbH,aA1IS,SAAAiC,GAEjBV,EAAqBC,EAAkB,GACvC,IAAIU,EAAYrB,EAASsB,WAAU,SAAAC,GAAG,OAAIA,EAAInC,KAAKgC,KACnD,GAAIC,GAAW,EAAG,CAMd,IAAIG,EAAY,YAAQxB,GACxBe,EAAkD,IAAnCS,EAAaH,GAAWrC,SAAcmB,EAAaA,EAAYlB,SAASuC,EAAaH,GAAWtC,QAC/GyC,EAAaH,GAAWzB,cAAiD,IAAnC4B,EAAaH,GAAWrC,SAAc,EAAG,EAC/EwC,EAAaH,GAAWrC,UAA6C,IAAnCwC,EAAaH,GAAWrC,SAAc,EAAG,EAC3E8B,EAAYU,OACT,CAMH,IAAIC,EAAc,GACdC,EAAW,GACfpC,EAAYqC,SAAQ,SAAAJ,GACbA,EAAInC,KAAKgC,IACRG,EAAG,2BAAQA,GAAR,IAAavC,SAAUuC,EAAIvC,SAAS,EAAGY,aAAc,IACxD8B,EAASH,EACTR,EAAeZ,EAAYlB,SAASsC,EAAIxC,SAE5C0C,EAAYG,KAAKL,MAErBV,EAAeY,GACfX,EAAY,GAAD,mBACJd,GADI,CAEP0B,SA0GJ,cAAC,EAAD,CACI1B,SAAUA,EACVF,OAnGG,SAAAsB,GACX,IAAIK,EAAW,YAAQnC,GAMvBmC,EAAcA,EAAYlC,KAAI,SAAAC,GAC1B,OAAIA,EAAQJ,KAAOgC,EACR,2BACA5B,GADP,IAEIR,SAA6B,IAAnBQ,EAAQR,SAAcQ,EAAQR,SAAUQ,EAAQR,SAAS,EACnEY,aAAiC,IAAnBJ,EAAQR,SAAcQ,EAAQI,aAAcJ,EAAQI,aAAa,IAGhFJ,KAEX,IAAIgC,EAAexB,EAAST,KAAI,SAAAgC,GAC5B,OAAGA,EAAInC,KAAKgC,GACJG,EAAIvC,SAAS,GAAG+B,EAAeZ,EAAYlB,SAASsC,EAAIxC,QAC5D2B,EAAoC,IAAfa,EAAIvC,SAAc2B,EAAmBA,EAAkB,GACtD,IAAfY,EAAIvC,SACPuC,EADG,2BAEIA,GAFJ,IAESvC,SAAUuC,EAAIvC,SAAS,EAAGY,aAAc2B,EAAI3B,aAAa,KAEtE2B,KAEXV,EAAeY,GACfX,EAAYU,IAwEJ7B,UA/DM,SAACyB,EAAkBS,EAAwBC,GACzD,IAAIN,EAAY,YAAQxB,GACxB,GAAyC,IAArCf,SAAS4C,GAMThB,EAAevB,EAAYC,KAAI,SAAAC,GAC3B,OAAIA,EAAQJ,KAAKgC,EACN,2BAAK5B,GAAZ,IAAqBR,SAAUQ,EAAQR,SAAS,EAAGY,aAAcJ,EAAQI,aAAa,IAEnFJ,MAEXuB,EAAeZ,EAAYlB,SAASuC,EAAaM,GAAqB/C,QACtEyC,EAAaO,OAAOD,EAAqB,GACzChB,EAAYU,OACT,CAMH,IAAIC,EAAW,YAAQnC,GACvBmC,EAAcA,EAAYlC,KAAI,SAAAC,GAC1B,OAAIA,EAAQJ,KAAOgC,EACR,2BACA5B,GADP,IAEIR,SAAiC,IAAvBQ,EAAQI,aAAkBJ,EAAQR,SAAUQ,EAAQR,SAAS,EACvEY,aAAqC,IAAvBJ,EAAQI,aAAkBJ,EAAQI,aAAcJ,EAAQI,aAAa,IAGpFJ,KAEX,IAAIgC,EAAexB,EAAST,KAAI,SAAAgC,GAC5B,OAAGA,EAAInC,KAAKgC,GACJG,EAAI3B,aAAa,GAAGmB,EAAeZ,EAAYlB,SAASsC,EAAIxC,QACtC,IAAnBwC,EAAI3B,aACP2B,EADG,2BAEIA,GAFJ,IAESvC,SAAUuC,EAAIvC,SAAS,EAAGY,aAAc2B,EAAI3B,aAAa,KAEtE2B,KAEXV,EAAeY,GACfX,EAAYU,GAEhBd,EAAqBC,EAAkB,IAkB/BR,YAAaA,O,MCtKd,SAAS6B,EAAOzD,GAK3B,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,eAAf,2BACA,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,mCACZD,EAAMoC,kBAAkB,EAAE,qBAAKnC,UAAU,cAAf,SAA8BD,EAAMoC,oBAA0B,W,MCX1F,SAASsB,EAAO1D,GAK3B,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,2BACA,qBAAKA,UAAU,mBAAf,sBACA,qBAAKA,UAAU,mBAAf,oBACA,qBAAKA,UAAU,mBAAf,sBACA,qBAAKA,UAAU,mBAAf,qBAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,kBACA,qBAAKA,UAAU,mBAAf,yBACA,qBAAKA,UAAU,mBAAf,oBACA,qBAAKA,UAAU,mBAAf,4BACA,qBAAKA,UAAU,mBAAf,+BAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,sBACA,qBAAKA,UAAU,mBAAf,iCAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,kBACA,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,mBAAf,uBACA,qBAAKA,UAAU,mBAAf,wBAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,uBACA,qBAAKA,UAAU,mBAAf,sBACA,qBAAKA,UAAU,mBAAf,qBACA,qBAAKA,UAAU,mBAAf,uBACA,qBAAKA,UAAU,mBAAf,wBAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,wBACA,qBAAKA,UAAU,mBAAf,+BACA,qBAAKA,UAAU,mBAAf,mCACA,qBAAKA,UAAU,mBAAf,0CACA,qBAAKA,UAAU,mBAAf,8BACA,qBAAKA,UAAU,mBAAf,4BACA,qBAAKA,UAAU,mBAAf,4CC1CD,SAAS0D,EAAW3D,GAAQ,IAAD,EACYqC,mBAAS,GADrB,mBAC/BD,EAD+B,KACZD,EADY,KAUtC,OACI,qCACI,cAAC,EAAD,CAAQC,kBAAmBA,IAC3B,cAAC,EAAD,CAAaA,kBAAmBA,EAAmBD,qBAAsBA,IACzE,cAAC,EAAD,OCpBZ,IAYeyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAACX,EAAD,MAEJY,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c094c837.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport default function GridItem(props) {\n    /*\n        Grid Item Component that holds the products inside the product grid.\n        It has the body of the cart that holds the product list their indivisual price and quantity.\n        It also has a 'Add To Cart' button.\n    */\n    return (\n        <div className='grid-container'>\n            <img className='product-image' src={props.image} alt={'Product'} width={300}/>\n            <div className='product-text'>{props.name}</div>\n            <div className='product-description'>{props.description}</div>\n            <div className='product-info'><b>Price:</b> {props.price}</div>\n            <div className='product-info'><b>Quality:</b> {props.quantity}</div>\n            {parseInt(props.quantity)>0?<div  className='product-button' onClick={() => props.handleSelect(props.id)}>Add to Cart</div>: null}\n        </div>\n    );\n}","import React from 'react';\nimport GridItem from './../../molecules/GridItem/index';\nimport './index.css';\n\nexport default function ProductGrid(props) {\n    /*\n        Grid Component that holds a particular product.\n        It has all the details of product along with price and quantity.\n        It also has a 'Add To Cart' button that can be used to add the product to the cart.\n    */\n    return (\n        <div className='product-grid'>\n            {props.productList.map(product => \n                <GridItem\n                    {...product}\n                    key={product.id}\n                    handleSelect={props.handleSelect}\n                />\n            )}\n        </div>\n    )\n}","import React from 'react';\nimport './index.css';\n\nexport default function CartItem(props) {\n    /*\n        Cart Item Component that holds the products inside the cart component.\n        It has the body of the cart that holds the indivisual product their indivisual price, quantity and total price.\n        It also has total amount of the cart.\n    */\n    return (\n        <div className='cart-product-container'>\n            <div className='cart-product-name-container'>\n                <img className='cart-product-image' src={props.image} alt={'Cart Product'} width={50}/>\n                <div className='cart-product-name'>{props.name}</div>\n            </div>\n            <div className='cart-product-info'>₹{props.price}</div>\n            <div className='cart-product-info'>\n                <span onClick={() => props.removeOne(props.id, props.cartQuantity, props.index)}>-</span>\n                {props.cartQuantity}\n                <span onClick={() => props.addOne(props.id)}>+</span>\n            </div>\n            <div className='cart-product-info'>₹{parseInt(props.price)*parseInt(props.cartQuantity)}</div>\n        </div>\n    );\n}","import React from 'react';\nimport './index.css';\nimport CartItem from '../../molecules/CartItem';\n\nexport default function Cart(props) {\n    /*\n        Cart Component that holds selected products.\n        It has the body of the cart that holds the product list their indivisual price, quantity and total price.\n        It also has a footer part that displays the total amount of the cart.\n    */\n    return (\n        <div className='cart-container'>\n            <div className='cart-header'>\n                <div className='header-item'>Product</div>\n                <div className='header-item'>Price</div>\n                <div className='header-item'>Quantity</div>\n                <div className='header-item'>Total</div>\n            </div>\n            {props.cartItem.map((item, index) => \n                <CartItem \n                    {...item}\n                    index={index}\n                    key={props.id}\n                    removeOne={props.removeOne}\n                    addOne={props.addOne}\n                />\n            )}\n            {props.cartItem.length>0?\n                <div className='cart-footer'>\n                    <hr />\n                    <div className='footer-item'>Total: ₹{props.totalAmount}</div>\n                </div>\n            : null}\n        </div>\n    )\n} ","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://run.mocky.io/v3/',\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t},\n});\n\nexport { instance as default };","import React, { useState, useEffect } from 'react';\nimport ProductGrid from './../../component/organisms/ProductGrid/index';\nimport Cart from './../../component/organisms/Cart/index';\nimport './index.css';\nimport axios from './../../utils/axios';\n\nexport default function CatalogPage(props) {\n    const { setTotalProductCount, totalProductCount } = props;\n    const [productList, setProductList] = useState([]);\n    const [cartItem, setCartItem] = useState([]);\n    const [totalAmount, setTotalAmount] = useState(0);\n\n    useEffect(() => {\n        axios.get('aea5d98a-654d-4423-bd99-6fbb90843730')\n            .then(data => {\n                setProductList(data.data.data);\n            })\n    }, []);\n\n    /* \n        Function to select a product from the product grid.\n        Takes in the the id for the product.\n        If the product doesnot exits then add the product to cart and reduce the count in the product grid.\n        If the product exists in the cart then increase the count in cart and decrease in the product grid.\n    */\n    const handleSelect = currentProductId => {\n        // Increasing the total count of the products in the cart\n        setTotalProductCount(totalProductCount+1);\n        let cartIndex = cartItem.findIndex(val => val.id===currentProductId);\n        if (cartIndex>-1) {\n            /* \n                If the selected item is in the cart then\n                -> increaing the quantity of the product in the cart\n                -> decreasing the quantity of the product in the grid\n            */\n            let tempCartItem = [ ...cartItem ];\n            setTotalAmount(tempCartItem[cartIndex].quantity===0? totalAmount: totalAmount+parseInt(tempCartItem[cartIndex].price));\n            tempCartItem[cartIndex].cartQuantity+=tempCartItem[cartIndex].quantity===0? 0: 1;\n            tempCartItem[cartIndex].quantity-=tempCartItem[cartIndex].quantity===0? 0 :1;\n            setCartItem(tempCartItem);\n        } else {\n            /* \n                If the selected item is not in the cart then\n                -> decreasing the quantity of the product in the cart\n                -> increaing the quantity of the product in the grid\n            */\n            let tempProduct = [];\n            let tempCart = {};\n            productList.forEach(val => {\n                if(val.id===currentProductId) {\n                    val = { ...val, quantity: val.quantity-1, cartQuantity: 1 };\n                    tempCart=val;\n                    setTotalAmount(totalAmount+parseInt(val.price));\n                }\n                tempProduct.push(val);\n            });\n            setProductList(tempProduct);\n            setCartItem([\n                ...cartItem,\n                tempCart,\n            ]);\n        }\n    }\n\n    /*\n        Function to add product in the cart.\n        Takes in the the id for the product.        \n    */\n    const addOne = currentProductId => {\n        let tempProduct = [ ...productList ];\n        /*\n            If the products is available then \n            -> increaing the quantity of the product in the cart\n            -> decreasing the quantity of the product in the grid\n        */\n        tempProduct = tempProduct.map(product => {\n            if (product.id === currentProductId) {\n                return { \n                    ...product,\n                    quantity: product.quantity===0? product.quantity :product.quantity-1,\n                    cartQuantity: product.quantity===0? product.cartQuantity :product.cartQuantity+1\n                };\n            }\n            return product;\n        })\n        let tempCartItem = cartItem.map(val => {\n            if(val.id===currentProductId) {\n                if (val.quantity>0) setTotalAmount(totalAmount+parseInt(val.price));\n                setTotalProductCount(val.quantity===0? totalProductCount :totalProductCount+1);\n                return val.quantity===0?\n                    val\n                    : { ...val, quantity: val.quantity-1, cartQuantity: val.cartQuantity+1 }\n            }\n            return val;\n        });\n        setProductList(tempProduct);\n        setCartItem(tempCartItem);\n    }\n\n    /*\n        Function to remove product in the cart.\n        Takes in the the id for the product.\n        If the product count in cart is 1 then remove the product from the cart.\n        If the product count in the cart is more than 1 then just decrease the count by 1..\n    */\n    const removeOne = (currentProductId, currentProductQuantity, currentProductIndex) => {\n        let tempCartItem = [ ...cartItem ];\n        if (parseInt(currentProductQuantity) === 1) {\n            /*\n                If the products count is one in teh cart then \n                ->  remove the product from the cart\n                -> increaing the quantity of the product in the grid\n            */\n            setProductList(productList.map(product => {\n                if (product.id===currentProductId) {\n                    return { ...product, quantity: product.quantity+1, cartQuantity: product.cartQuantity-1 }\n                }\n                return product;\n            }));\n            setTotalAmount(totalAmount-parseInt(tempCartItem[currentProductIndex].price));\n            tempCartItem.splice(currentProductIndex, 1);\n            setCartItem(tempCartItem);\n        } else {\n            /*\n                If the products count is one in teh cart then \n                ->  decreasing the quantity of the product in the cart\n                -> increaing the quantity of the product in the grid\n            */\n            let tempProduct = [ ...productList ];\n            tempProduct = tempProduct.map(product => {\n                if (product.id === currentProductId) {\n                    return { \n                        ...product,\n                        quantity: product.cartQuantity===0? product.quantity :product.quantity+1,\n                        cartQuantity: product.cartQuantity===0? product.cartQuantity :product.cartQuantity-1\n                    };\n                }\n                return product;\n            })\n            let tempCartItem = cartItem.map(val => {\n                if(val.id===currentProductId) {\n                    if (val.cartQuantity>0) setTotalAmount(totalAmount-parseInt(val.price));\n                    return val.cartQuantity===0?\n                        val\n                        : { ...val, quantity: val.quantity+1, cartQuantity: val.cartQuantity-1 }\n                }\n                return val;\n            });\n            setProductList(tempProduct);\n            setCartItem(tempCartItem);\n        }\n        setTotalProductCount(totalProductCount-1);\n    }\n\n    /*\n        Main body of the shopping catalog which contain two parts.\n        Product Grid -> Contains all the product in the for of grid that has the detail of the product as well as the 'Add to Cart' button.\n        Cart -> Cart component that contains all the selected products, their price and their count.\n    */\n    return (\n        <div className='body'>\n            <ProductGrid \n                productList={productList}\n                handleSelect={handleSelect}\n            />\n            <Cart \n                cartItem={cartItem}\n                addOne={addOne}\n                removeOne={removeOne}\n                totalAmount={totalAmount}\n            />\n        </div>\n    );\n}","import React from 'react';\nimport './index.css';\n\nexport default function Header(props) {\n    /*\n        Header Component of the page.\n        It has the logo, name and the product count of the product added.\n    */\n    return (\n        <div className='header'>\n            <div className='logo-header'></div>\n            <div className='title-header'>Shopping Site</div>\n            <div className='cart-item-count'>\n                <i className=\"fas fa-shopping-cart cart-icon\"></i>\n                {props.totalProductCount>0?<div className='total-count'>{props.totalProductCount}</div> :null}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './index.css';\n\nexport default function Footer(props) {\n    /*\n        Footer Component of the page.\n        It has all the details of shopping site.\n    */\n    return(\n        <div className='footer'>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Shopping Site</div>\n                <div className='footer-list-item'>About Us</div>\n                <div className='footer-list-item'>Why Us</div>\n                <div className='footer-list-item'>Our Team</div>\n                <div className='footer-list-item'>Blog</div>\n            </div>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Shop</div>\n                <div className='footer-list-item'>New Arrival</div>\n                <div className='footer-list-item'>Offers</div>\n                <div className='footer-list-item'>Product Type 1</div>\n                <div className='footer-list-item'>Product Type 2</div>\n            </div>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Policies</div>\n                <div className='footer-list-item'>Privacy Policies</div>\n            </div>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Help</div>\n                <div className='footer-list-item'>FAQs</div>\n                <div className='footer-list-item'>Assurance</div>\n                <div className='footer-list-item'>Sitemap</div>\n            </div>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Follow Us</div>\n                <div className='footer-list-item'>Facebook</div>\n                <div className='footer-list-item'>Twitter</div>\n                <div className='footer-list-item'>Instagram</div>\n                <div className='footer-list-item'>Youtube</div>\n            </div>\n            <div className='footer-list'>\n                <div className='footer-list-header'>Contact Us</div>\n                <div className='footer-list-item'>Call - 1234567890</div>\n                <div className='footer-list-item'>Whatsapp - 1234567890</div>\n                <div className='footer-list-item'>Email - abc@shoppingsite.com</div>\n                <div className='footer-list-item'>D-81i 8ith Floor</div>\n                <div className='footer-list-item'>Imaginary City</div>\n                <div className='footer-list-item'>Imaginary Country 123456</div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport './index.css';\nimport CatalogPage from './container/CatalogPage/index';\nimport Header from './component/organisms/Header/index';\nimport Footer from './component/organisms/Footer/index';\n\nexport default function MainLayout(props) {\n    const [totalProductCount, setTotalProductCount] = useState(0);\n\n    /* \n        Main Layout of the shopping page\n        There are three parts,\n        Header -> The header with logo, name and cart icon with total number of items in cart\n        Body ->  Body with  product list and a cart.\n        Footer ->  Footer with website details \n    */\n    return (\n        <>\n            <Header totalProductCount={totalProductCount}/>\n            <CatalogPage totalProductCount={totalProductCount} setTotalProductCount={setTotalProductCount}/>\n            <Footer />\n        </>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainLayout from \"./mainLayout\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainLayout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}